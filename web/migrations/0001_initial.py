# Generated by Django 5.0 on 2025-02-01 23:05

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import web.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('city', models.CharField(choices=[('Azua', 'Azua'), ('Baoruco', 'Baoruco'), ('Barahona', 'Barahona'), ('Dajabón', 'Dajabón'), ('Duarte', 'Duarte'), ('Elías Piña', 'Elías Piña'), ('El Seibo', 'El Seibo'), ('Espaillat', 'Espaillat'), ('Independencia', 'Independencia'), ('La Altagracia', 'La Altagracia'), ('La Romana', 'La Romana'), ('La Vega', 'La Vega'), ('María Trinidad Sánchez', 'María Trinidad Sánchez'), ('Monte Cristi', 'Monte Cristi'), ('Pedernales', 'Pedernales'), ('Peravia', 'Peravia'), ('Puerto Plata', 'Puerto Plata'), ('Hermanas Mirabal', 'Hermanas Mirabal'), ('Samaná', 'Samaná'), ('San Cristóbal', 'San Cristóbal'), ('San Juan', 'San Juan'), ('San Pedro de Macorís', 'San Pedro de Macorís'), ('Sanchez Ramírez', 'Sanchez Ramírez'), ('Santiago', 'Santiago'), ('Santiago Rodríguez', 'Santiago Rodríguez'), ('Valverde', 'Valverde'), ('Monseñor Nouel', 'Monseñor Nouel'), ('Monte Plata', 'Monte Plata'), ('Hato Mayor', 'Hato Mayor'), ('San José de Ocoa', 'San José de Ocoa'), ('Santo Domingo', 'Santo Domingo')], max_length=64)),
                ('adress', models.CharField(max_length=500)),
                ('contact', models.CharField(max_length=100)),
                ('map', models.CharField(default='hola', max_length=500)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('search_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Ensurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('logo', models.ImageField(blank=True, upload_to='')),
                ('search_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=6)),
                ('salutation', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('search_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('bornDate', models.DateField(blank=True, null=True)),
                ('is_doctor', models.BooleanField(default=False)),
                ('national_id', models.CharField(blank=True, help_text='Dominican National ID (Cédula), e.g. 001-1234567-8', max_length=13, null=True, unique=True)),
                ('exequatur', models.CharField(blank=True, help_text='Dominican Exequatur number assigned by authorities', max_length=10, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='popo', max_length=64)),
                ('cities', web.models.MultiSelectField(blank=True, choices=[('Azua', 'Azua'), ('Baoruco', 'Baoruco'), ('Barahona', 'Barahona'), ('Dajabón', 'Dajabón'), ('Duarte', 'Duarte'), ('Elías Piña', 'Elías Piña'), ('El Seibo', 'El Seibo'), ('Espaillat', 'Espaillat'), ('Independencia', 'Independencia'), ('La Altagracia', 'La Altagracia'), ('La Romana', 'La Romana'), ('La Vega', 'La Vega'), ('María Trinidad Sánchez', 'María Trinidad Sánchez'), ('Monte Cristi', 'Monte Cristi'), ('Pedernales', 'Pedernales'), ('Peravia', 'Peravia'), ('Puerto Plata', 'Puerto Plata'), ('Hermanas Mirabal', 'Hermanas Mirabal'), ('Samaná', 'Samaná'), ('San Cristóbal', 'San Cristóbal'), ('San Juan', 'San Juan'), ('San Pedro de Macorís', 'San Pedro de Macorís'), ('Sanchez Ramírez', 'Sanchez Ramírez'), ('Santiago', 'Santiago'), ('Santiago Rodríguez', 'Santiago Rodríguez'), ('Valverde', 'Valverde'), ('Monseñor Nouel', 'Monseñor Nouel'), ('Monte Plata', 'Monte Plata'), ('Hato Mayor', 'Hato Mayor'), ('San José de Ocoa', 'San José de Ocoa'), ('Santo Domingo', 'Santo Domingo')], max_length=64)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('renderizable', models.BooleanField(default=False)),
                ('takes_dates', models.BooleanField(default=False)),
                ('in_person', models.BooleanField(default=False)),
                ('virtually', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, default='static/images/profile_picture.jpg', upload_to='static/images')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('search_count', models.IntegerField(default=0)),
                ('clinics', models.ManyToManyField(blank=True, related_name='doctors', to='web.clinic')),
                ('docuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to=settings.AUTH_USER_MODEL)),
                ('ensurances', models.ManyToManyField(blank=True, related_name='doctors', to='web.ensurance')),
                ('specialities', models.ManyToManyField(blank=True, related_name='doctors', to='web.speciality')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='recent_doctors',
            field=models.ManyToManyField(blank=True, to='web.doctor'),
        ),
        migrations.CreateModel(
            name='DoctorContacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone1', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region=None, unique=True)),
                ('instagram', models.URLField(null=True)),
                ('facebook', models.URLField(null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='web.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio', models.IntegerField(default=100)),
                ('days', web.models.MultiSelectField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday'), ('web', 'days')], max_length=300)),
                ('horas', web.models.MultiSelectField(choices=[('00:00:00', '00:00:00'), ('00:15:00', '00:15:00'), ('00:30:00', '00:30:00'), ('00:45:00', '00:45:00'), ('01:00:00', '01:00:00'), ('01:15:00', '01:15:00'), ('01:30:00', '01:30:00'), ('01:45:00', '01:45:00'), ('02:00:00', '02:00:00'), ('02:15:00', '02:15:00'), ('02:30:00', '02:30:00'), ('02:45:00', '02:45:00'), ('03:00:00', '03:00:00'), ('03:15:00', '03:15:00'), ('03:30:00', '03:30:00'), ('03:45:00', '03:45:00'), ('04:00:00', '04:00:00'), ('04:15:00', '04:15:00'), ('04:30:00', '04:30:00'), ('04:45:00', '04:45:00'), ('05:00:00', '05:00:00'), ('05:15:00', '05:15:00'), ('05:30:00', '05:30:00'), ('05:45:00', '05:45:00'), ('06:00:00', '06:00:00'), ('06:15:00', '06:15:00'), ('06:30:00', '06:30:00'), ('06:45:00', '06:45:00'), ('07:00:00', '07:00:00'), ('07:15:00', '07:15:00'), ('07:30:00', '07:30:00'), ('07:45:00', '07:45:00'), ('08:00:00', '08:00:00'), ('08:15:00', '08:15:00'), ('08:30:00', '08:30:00'), ('08:45:00', '08:45:00'), ('09:00:00', '09:00:00'), ('09:15:00', '09:15:00'), ('09:30:00', '09:30:00'), ('09:45:00', '09:45:00'), ('010:00:00', '010:00:00'), ('010:15:00', '010:15:00'), ('010:30:00', '010:30:00'), ('010:45:00', '010:45:00'), ('011:00:00', '011:00:00'), ('011:15:00', '011:15:00'), ('011:30:00', '011:30:00'), ('011:45:00', '011:45:00'), ('012:00:00', '012:00:00'), ('012:15:00', '012:15:00'), ('012:30:00', '012:30:00'), ('012:45:00', '012:45:00'), ('013:00:00', '013:00:00'), ('013:15:00', '013:15:00'), ('013:30:00', '013:30:00'), ('013:45:00', '013:45:00'), ('014:00:00', '014:00:00'), ('014:15:00', '014:15:00'), ('014:30:00', '014:30:00'), ('014:45:00', '014:45:00'), ('015:00:00', '015:00:00'), ('015:15:00', '015:15:00'), ('015:30:00', '015:30:00'), ('015:45:00', '015:45:00'), ('016:00:00', '016:00:00'), ('016:15:00', '016:15:00'), ('016:30:00', '016:30:00'), ('016:45:00', '016:45:00'), ('017:00:00', '017:00:00'), ('017:15:00', '017:15:00'), ('017:30:00', '017:30:00'), ('017:45:00', '017:45:00'), ('018:00:00', '018:00:00'), ('018:15:00', '018:15:00'), ('018:30:00', '018:30:00'), ('018:45:00', '018:45:00'), ('019:00:00', '019:00:00'), ('019:15:00', '019:15:00'), ('019:30:00', '019:30:00'), ('019:45:00', '019:45:00'), ('020:00:00', '020:00:00'), ('020:15:00', '020:15:00'), ('020:30:00', '020:30:00'), ('020:45:00', '020:45:00'), ('021:00:00', '021:00:00'), ('021:15:00', '021:15:00'), ('021:30:00', '021:30:00'), ('021:45:00', '021:45:00'), ('022:00:00', '022:00:00'), ('022:15:00', '022:15:00'), ('022:30:00', '022:30:00'), ('022:45:00', '022:45:00'), ('023:00:00', '023:00:00'), ('023:15:00', '023:15:00'), ('023:30:00', '023:30:00'), ('023:45:00', '023:45:00')], max_length=300)),
                ('modalidad', models.CharField(choices=[('in_person', 'in_person'), ('virtually', 'virtually')], max_length=300)),
                ('isActive', models.BooleanField(default=True)),
                ('clinica', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dates', to='web.clinic')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dates', to='web.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='ClientDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('modality', models.CharField(choices=[('in_person', 'in_person'), ('virtually', 'virtually')], max_length=300)),
                ('isActive', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('date_set', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='clients_dates', to='web.doctordate')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('national_id', models.CharField(blank=True, help_text='Dominican National ID (Cédula), e.g. 001-1234567-8', max_length=13, null=True, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_patients', to='web.doctor')),
            ],
        ),
        migrations.AddField(
            model_name='clinic',
            name='ensurance',
            field=models.ManyToManyField(blank=True, related_name='clinics', to='web.ensurance'),
        ),
        migrations.AddField(
            model_name='user',
            name='ensurance',
            field=models.ManyToManyField(blank=True, related_name='ensurances', to='web.ensurance'),
        ),
        migrations.AddField(
            model_name='user',
            name='gender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor', to='web.gender'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveSmallIntegerField()),
                ('headline', models.CharField(blank=True, max_length=100)),
                ('review', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='web.doctor')),
            ],
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.CheckConstraint(check=models.Q(('rate__gte', 1), ('rate__lte', 5)), name='rate_between_1_and_5'),
        ),
    ]
