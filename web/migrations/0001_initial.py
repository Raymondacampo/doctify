# Generated by Django 5.0 on 2024-05-14 16:38

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('adress', models.CharField(max_length=500)),
                ('contact', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Days',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('SUN', 'Sunday'), ('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday')], max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Ensurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('logo', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora', models.IntegerField(choices=[(0, 0), (3600000, 1), (7200000, 2), (10800000, 3), (14400000, 4), (18000000, 5), (21600000, 6), (25200000, 7), (28800000, 8), (32400000, 9), (36000000, 10), (39600000, 11), (43200000, 12), (46800000, 13), (50400000, 14), (54000000, 15), (57600000, 16), (61200000, 17), (64800000, 18), (68400000, 19), (72000000, 20), (75600000, 21), (79200000, 22), (82800000, 23), (86400000, 24)], default=0)),
                ('minuto', models.IntegerField(blank=True, choices=[(0, 0), (1800000, 30)], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speciality', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.CharField(max_length=500)),
                ('contact', models.CharField(max_length=500)),
                ('image', models.URLField(default='https://i.imgflip.com/6yvpkj.jpg')),
                ('description', models.CharField(blank=True, max_length=400)),
                ('clinic', models.ManyToManyField(blank=True, related_name='doctors', to='web.clinic')),
                ('docuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to=settings.AUTH_USER_MODEL)),
                ('ensurance', models.ManyToManyField(related_name='doctors', to='web.ensurance')),
                ('speciality', models.ManyToManyField(blank=True, related_name='doctors', to='web.speciality')),
            ],
        ),
        migrations.CreateModel(
            name='ClientDates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime(2024, 5, 14, 12, 38, 54, 402280))),
                ('isActive', models.BooleanField(default=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientDates', to=settings.AUTH_USER_MODEL)),
                ('clinic', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientDates', to='web.clinic')),
                ('doctor', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientDates', to='web.doctor')),
            ],
        ),
        migrations.AddField(
            model_name='clinic',
            name='ensurance',
            field=models.ManyToManyField(blank=True, related_name='clinics', to='web.ensurance'),
        ),
        migrations.CreateModel(
            name='Dates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinica', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dates', to='web.clinic')),
                ('days', models.ManyToManyField(related_name='dates', to='web.days')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dates', to='web.doctor')),
                ('horas', models.ManyToManyField(related_name='dates', to='web.hours')),
            ],
        ),
    ]
